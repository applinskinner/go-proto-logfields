// Code generated by protoc-gen-gogo.
// source: logfields.proto
// DO NOT EDIT!

/*
Package logfields is a generated protocol buffer package.

It is generated from these files:
	logfields.proto

It has these top-level messages:
	LogField
*/
package logfields

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.GoGoProtoPackageIsVersion1

type LogField struct {
	// name of the log context field where the value of this field should be recorded.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *LogField) Reset()                    { *m = LogField{} }
func (m *LogField) String() string            { return proto.CompactTextString(m) }
func (*LogField) ProtoMessage()               {}
func (*LogField) Descriptor() ([]byte, []int) { return fileDescriptorLogfields, []int{0} }

var E_Logfield = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*LogField)(nil),
	Field:         261337,
	Name:          "improbable.logfield",
	Tag:           "bytes,261337,opt,name=logfield",
}

func init() {
	proto.RegisterType((*LogField)(nil), "improbable.LogField")
	proto.RegisterExtension(E_Logfield)
}

var fileDescriptorLogfields = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0xc9, 0x4f, 0x4f,
	0xcb, 0x4c, 0xcd, 0x49, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xca, 0xcc, 0x05,
	0x32, 0x92, 0x12, 0x93, 0x72, 0x52, 0xa5, 0x14, 0xd2, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1,
	0x32, 0x49, 0xa5, 0x69, 0xfa, 0x29, 0xa9, 0xc5, 0xc9, 0x45, 0x99, 0x05, 0x25, 0xf9, 0x45, 0x10,
	0xd5, 0x4a, 0x72, 0x5c, 0x1c, 0x3e, 0xf9, 0xe9, 0x6e, 0x20, 0x03, 0x84, 0x84, 0xb8, 0x58, 0xf2,
	0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0xab, 0x40, 0x2e, 0x0e,
	0x98, 0x05, 0x42, 0xb2, 0x7a, 0x10, 0xe3, 0xf4, 0x60, 0xc6, 0xe9, 0x81, 0xf5, 0xf9, 0x17, 0x94,
	0x64, 0xe6, 0xe7, 0x15, 0x4b, 0xdc, 0xfc, 0xc9, 0x0f, 0xd4, 0xc8, 0x6d, 0x24, 0xa2, 0x87, 0x70,
	0x81, 0x1e, 0xcc, 0xf0, 0x20, 0xb8, 0x31, 0x4e, 0xdc, 0x51, 0x9c, 0x70, 0x37, 0x27, 0xb1, 0x81,
	0xcd, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xff, 0x16, 0x5a, 0x9e, 0xc7, 0x00, 0x00, 0x00,
}
